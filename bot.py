import asyncio
import logging
import os
import requests
from aiogram import Bot
from dotenv import load_dotenv

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

TOKEN = os.getenv("BOT_TOKEN")  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TARGET_CHANNEL_ID = os.getenv("TARGET_CHANNEL_ID")  # –ö–∞–Ω–∞–ª, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Å—Ç—ã
TGSTAT_API_KEY = os.getenv("TGSTAT_API_KEY")  # API-–∫–ª—é—á TGStat

if not TOKEN:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env!")
if not TARGET_CHANNEL_ID:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: TARGET_CHANNEL_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env!")
if not TGSTAT_API_KEY:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: TGSTAT_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env!")

TARGET_CHANNEL_ID = int(TARGET_CHANNEL_ID)

# üîπ ID –∫–∞–Ω–∞–ª–∞ UTEX
CHANNEL_ID = "@utex_exchange"

# üîπ URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ TGStat API
TGSTAT_URL = f"https://api.tgstat.ru/channels/posts?channelId={CHANNEL_ID}&limit=10"
HEADERS = {"Authorization": f"Bearer {TGSTAT_API_KEY}"}

bot = Bot(token=TOKEN)

# –•—Ä–∞–Ω–∏–º ID —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å
sent_messages = set()

async def fetch_and_send():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —Å 'Trade'."""
    response = requests.get(TGSTAT_URL, headers=HEADERS)
    data = response.json()
    
    if "response" in data and "items" in data["response"]:
        for post in data["response"]["items"]:
            text = post["text"]
            post_id = post["date"]  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞—Ç—É –∫–∞–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –ø–æ—Å—Ç–∞
            
            if "Trade" in text or "trade" in text:  # –§–∏–ª—å—Ç—Ä –ø–æ —Å–ª–æ–≤—É
                if post_id not in sent_messages:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ª–∏ —ç—Ç–æ—Ç –ø–æ—Å—Ç —Ä–∞–Ω–µ–µ
                    message = f"üì¢ –ù–æ–≤–æ—Å—Ç—å –∏–∑ UTEX:\n{text}"
                    await bot.send_message(TARGET_CHANNEL_ID, message)
                    sent_messages.add(post_id)  # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö
                    print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {text[:50]}...")  
            else:
                print(f"‚è© –ü—Ä–æ–ø—É—â–µ–Ω–æ: {text[:50]}...")  
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö!")

async def main():
    """–ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç."""
    while True:
        await fetch_and_send()
        print("üîÑ –û–∂–∏–¥–∞–Ω–∏–µ 5 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π...")
        await asyncio.sleep(300)  # –ó–∞–¥–µ—Ä–∂–∫–∞ 300 —Å–µ–∫—É–Ω–¥ (5 –º–∏–Ω—É—Ç)

if __name__ == "__main__":
    asyncio.run(main())
